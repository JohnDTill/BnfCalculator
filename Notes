The AST to string conversion needs work:
    -Multiplication by a rational number with 1 as the numerator should be printed as division
Big-num library:
	-Need to define rational exponentiation as part of library
Symbolic mode still needs to address:
	-Fractional exponentiation
	-Logs
	-More robust trig evaluations
	-Trig identities
AST:
	-Need to flatten addition
	-Need to implement many algebraic rewriting simplifications


Grammar:
Expression => Below
Addition => Below (('+' | '-') Below)*
Multiplication => Below (('*' | '/' | '\' | '%') Below)*
LeftUnary => '-'* Below
RightUnary => Below '!'*
Exponent => Below ('^' LeftUnary)?
Primitive => Grouping | AbsoluteValue | NumberLiteral | Identifier
Grouping => '(' Expression ')'
AbsoluteValue => '|' Expression '|'
Identifier => VarName CallArgs?
CallArgs => '(' (Expression (',' Expression)*)? ')'

NumberLiteral => ('0'-'9')+ ('.' ('0'-'9')+)?
VarName => ('a'-'z' | 'A'-'Z') ('a'-'z' | 'A'-'Z' | '0'-'9')*
